---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import { getEntry } from "astro:content";
import Hero from "@components/posts/Hero.astro";
import TOC from "@components/posts/TOC.astro";

export async function getStaticPaths() {
  const posts = (await getCollection("posts"))
    .filter(post => post.data.status === 'done')
  
  return posts.map((post)=>({
    params: { slug: post.id },
    props: post
  }))
}
type Props = CollectionEntry<"posts">;

const post = await getEntry("posts", Astro.params.slug);
if (!post) {
  // Handle Error, for example:
  throw new Error(`Post not found: ${Astro.params.slug}`);
}
const { Content, headings } = await render(post);
---

<Layout title={post.data.title} description={post.data.description}>
  <Container>
    <div class="animate mb-8">
      <BackToPrev href="/posts">
        Back
      </BackToPrev>
    </div>
    <div class="  lg:flex lg:items-start justify-between gap-x-10 overflow-visible">
      {!!headings.length && <TOC headings={headings} />}
      <div>
        <Hero post={post} />
        <article class="animate max-w-screen-sm">
          <Content />
        </article>
      </div>
    </div>

  </Container>
</Layout>